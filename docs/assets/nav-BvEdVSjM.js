const p="modulepreload",h=function(e){return"/poc-mfe-vite/"+e},u={},w=function(n,l,y){let a=Promise.resolve();if(l&&l.length>0){document.getElementsByTagName("link");const s=document.querySelector("meta[property=csp-nonce]"),o=s?.nonce||s?.getAttribute("nonce");a=Promise.all(l.map(t=>{if(t=h(t),t in u)return;u[t]=!0;const i=t.endsWith(".css"),d=i?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${t}"]${d}`))return;const r=document.createElement("link");if(r.rel=i?"stylesheet":p,i||(r.as="script",r.crossOrigin=""),r.href=t,o&&r.setAttribute("nonce",o),document.head.appendChild(r),i)return new Promise((m,f)=>{r.addEventListener("load",m),r.addEventListener("error",()=>f(new Error(`Unable to preload CSS for ${t}`)))})}))}return a.then(()=>n()).catch(s=>{const o=new Event("vite:preloadError",{cancelable:!0});if(o.payload=s,window.dispatchEvent(o),!o.defaultPrevented)throw s})};console.log("[nav.ts]");let c=null;async function v(){console.log("Started dynamic import of @browser-module/router");const{router:e}=await w(async()=>{const{router:n}=await import("@browser-module/router");return{router:n}},[]);c=e,console.log("Finished dynamic import of @browser-module/router")}v();function E(e){if(!c)throw new Error("router is not loaded yet");c.push(e)}function g(){if(!c)throw new Error("router is not loaded yet");return c.currentRoute.value}function _(...e){return e.map(n=>n.replace(/\/+$/,"").replace(/^\/+/,"")).join("/")}export{g as getCurrentRoute,_ as join,E as navigateTo};
